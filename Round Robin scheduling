1. Round Robin scheduling  
#include <stdio.h>
struct Process {
    int id, arrival_time, burst_time, remaining_time;
};
void roundRobinScheduling(struct Process p[], int n, int time_quantum) {
    int time = 0, completed = 0;
    while (completed < n) {
        for (int i = 0; i < n; i++) {
            if (p[i].remaining_time > 0) {
                if (p[i].remaining_time > time_quantum) {
                    time += time_quantum;
                    p[i].remaining_time -= time_quantum;
                } else {
                    time += p[i].remaining_time;
                    p[i].remaining_time = 0;
                    completed++;
                    printf("Process %d completed at time %d\n", p[i].id, time);
                }
            }
        }
    }
}
int main() {
    int n = 3, time_quantum = 2;
    struct Process p[] = {{1, 0, 5, 5}, {2, 1, 3, 3}, {3, 2, 8, 8}};
    roundRobinScheduling(p, n, time_quantum);
    return 0;
}
